//
//  main.m
//  _07_局部变量和全局变量和成员变量的区别
//
//  Created by 吴佳臻 on 2017/6/1.
//  Copyright © 2017年 吴佳臻. All rights reserved.
//

#import <Foundation/Foundation.h>

@interface Person : NSObject
{
    // 成员变量(属性, 实例变量)
    // 1.写在类声明的大括号中的变量
    // 2.成员变量只能通过对象来访问
    
    // 注意: 成员变量不能离开'类', 离开类之后就不是成员变量 \
    成员变量不能在 定义 的同时 进行初始化
    
    // 存储位置: 堆(当前 对象 对应的堆的存储空间中)
    // 存储在堆中的数据, 不会被自动释放, 只能程序员手动释放
    int age;
}
@end

// 全局变量
// 1.写在函数和大括号外部的变量
// 2.作用域: 从定义的那一行开始, 一直到文件末尾
// 3.全局变量可以先定义在初始化, 也可以定义的同时初始化
// 4.存储位置: 静态区
// 5.程序一启动就会分配存储空间, 直到程序结束才会释放
int a;
int b = 10;


int main(int argc, const char * argv[]) {
    // 局部变量
    // 1.写在函数或者代码块中的变量
    // 2.作用域: 从定义的那一行开始, 一直到遇到大括号或者return
    // 3.局部变量可以先定义再初始化, 也可以定义的同时初始化
    // 4.存储位置 : 栈
    // 5.存储在栈中的数据有一个特点, 系统会自动给我们释放
    int num = 10;
    {
        int value;
    }
    return 0;
}
